// ==UserScript==
// @name        Stack Exchange, OpenAI detector
// @namespace   https://github.com/Glorfindel83/
// @description Adds a button to check the probability that a post was written by a bot
// @author      Glorfindel
// @contributor PurpleMagick
// @updateURL   https://raw.githubusercontent.com/Glorfindel83/SE-Userscripts/master/openai-detector/openai-detector.user.js
// @downloadURL https://raw.githubusercontent.com/Glorfindel83/SE-Userscripts/master/openai-detector/openai-detector.user.js
// @supportURL  https://stackapps.com/questions/9611/openai-detector
// @version     0.7
// @match       *://*.stackexchange.com/questions/*
// @match       *://*.stackexchange.com/posts/*/revisions
// @match       *://*.stackexchange.com/review/*
// @match       *://*.stackoverflow.com/questions/*
// @match       *://*.stackoverflow.com/posts/*/revisions
// @match       *://*.stackoverflow.com/review/*
// @match       *://*.superuser.com/questions/*
// @match       *://*.superuser.com/posts/*/revisions
// @match       *://*.superuser.com/review/*
// @match       *://*.serverfault.com/questions/*
// @match       *://*.serverfault.com/posts/*/revisions
// @match       *://*.serverfault.com/review/*
// @match       *://*.askubuntu.com/questions/*
// @match       *://*.askubuntu.com/posts/*/revisions
// @match       *://*.askubuntu.com/review/*
// @match       *://*.stackapps.com/questions/*
// @match       *://*.stackapps.com/posts/*/revisions
// @match       *://*.stackapps.com/review/*
// @match       *://*.mathoverflow.net/questions/*
// @match       *://*.mathoverflow.net/posts/*/revisions
// @match       *://*.mathoverflow.net/review/*
// @exclude     *://*.stackexchange.com/questions/ask
// @exclude     *://*.stackoverflow.com/questions/ask
// @exclude     *://*.superuser.com/questions/ask
// @exclude     *://*.serverfault.com/questions/ask
// @exclude     *://*.askubuntu.com/questions/ask
// @exclude     *://*.stackapps.com/questions/ask
// @exclude     *://*.mathoverflow.net/questions/ask
// @connect     openai-openai-detector.hf.space
// @require     https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js
// @require     https://gist.github.com/raw/2625891/waitForKeyElements.js
// @grant       GM_xmlhttpRequest
// @grant       GM.xmlHttpRequest
// ==/UserScript==

waitForKeyElements("div.js-post-menu", function(jNode) {
  // Regular posts
  const menu = $(jNode);

  // Add button
  const button = $('<button class="s-btn s-btn__link" type="button" href="#">Detect OpenAI</button>');
  const cell = $('<div class="flex--item"></div>');
  cell.append(button);
  menu.children().first().append(cell);

  button.on('click', function() {
    const post = button.parents(".answercell, .postcell");

    const text = extractPostText(post);
    detectAI(text);
  });
});

/**
 * Extracts and prepates just the post text ignoring notices.
 * @param {jQuery} post - container where the body can be found as a child
 * @return {string} text to analyse
 */
function extractPostText(post) {
  const postBody = post.find(".js-post-body").clone();
  //remove post notices
  postBody.find("aside").remove();

  return cleanText(postBody.text());
}

/**
 * Try to clean text for handing over to the detector.
 * @param {string} text - content of a post
 * @return {string} a cleaned version of the post with newlines removed
 */
function cleanText(text) {
  return text
    .trim()
    .replace(/\n/g, " ");
}

(function () {
  "use strict";

  // Revisions - only attach button to revisions that have a "Source" button. Do not attach to tag only edits.
  $("a[href$='/view-source']").each(function() {
    const sourceButton = $(this);

    // Add button
    const button = $('<a href="#" class="flex--item" title="detect OpenAI">Detect OpenAI</a>');
    const menu = sourceButton.parent();
    menu.append(button);

    button.on('click', function() {
      const linkURL = sourceButton.attr("href");
      const sourceURL = new URL(linkURL, window.location.origin);

      $.get(sourceURL, function(result) {
        const sourcePage = new DOMParser().parseFromString(result, "text/html");
        const text = cleanText(sourcePage.body.textContent);
        detectAI(text);
      });
    });
  });
})();

function detectAI(text) {
  return GM.xmlHttpRequest({
    method: "GET",
    url: "https://openai-openai-detector.hf.space/openai-detector?" + encodeURIComponent(text),
    timeout: 60000,
  })
    .then((response) => {
      const data = JSON.parse(response.responseText);
      const percent = Math.round(data.fake_probability * 10000) / 100;
      const message = `According to Hugging Face, the chance that this post was generated by OpenAI is ${percent}%`;
      StackExchange.helpers.showToast(message);
    });
}
